services:
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: paneladecasadb
      POSTGRES_PASSWORD: paneladecasapass
      POSTGRES_DB: paneladecasa
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U paneladecasadb -d paneladecasa"]
      interval: 5s
      timeout: 5s
      retries: 5
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    environment:
      NODE_ENV: production
      PORT: 4000
      DATABASE_URL: postgres://paneladecasadb:paneladecasapass@postgres:5432/paneladecasa
      JWT_SECRET: sua_senha_secreta_super_segura_aqui
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "4000:4000"
    volumes:
      - uploads:/app/apps/backend/uploads
    restart: on-failure
  frontend:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://backend:4000
    environment:
      NODE_ENV: production
      PORT: 3000
      NEXT_PUBLIC_API_URL: http://backend:4000
    depends_on:
      - backend
    ports:
      - "3000:3000"
volumes:
  pgdata:
  uploads:
